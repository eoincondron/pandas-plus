name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

env:
  PACKAGE_NAME: pandas-plus

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # excluding macos as test suite often crashe on the remote. 
        # Strange since I am developing this package on a mac. Perhaps it's because I have 8 CPUs on the local
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.12']
        exclude:
          # Skip some combinations to reduce CI time
          - os: windows-latest
            python-version: '3.10'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build pytest pytest-xdist pytest-cov
        pip install -e .[dev,test]

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Type check with mypy
      run: |
        pip install mypy
        mypy pandas_plus --ignore-missing-imports || true

    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=pandas_plus --cov-report=xml --cov-report=term

    - name: Upload to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV }}

    - name: Upload coverage reports to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV }}
        file: ./coverage.xml
        fail_ci_if_error: true

  build:
    name: Build distribution packages
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build source and wheel distributions
      run: python -m build

    - name: Check distribution
      run: twine check dist/*

    - name: Upload distribution artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-packages
        path: dist/

  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: pypi
      url: https://pypi.org/p/pandas-plus

    steps:
    - name: Download distribution artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-packages
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  trigger-conda-forge:
    name: Trigger conda-forge update
    runs-on: ubuntu-latest
    needs: publish-pypi
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - name: Trigger conda-forge bot
      run: |
        echo "PyPI release published. conda-forge bot should automatically detect and create PR."
        echo "Monitor: https://github.com/conda-forge/pandas-plus-feedstock"
        echo "If no automatic PR appears within 24h, create manual PR to feedstock."